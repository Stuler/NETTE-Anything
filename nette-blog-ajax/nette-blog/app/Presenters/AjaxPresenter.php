<?php

declare(strict_types=1);

namespace App\Presenters;

use App\Components\FileSystem\AjaxComponent;
use App\Components\FileSystem\AjaxComponentFactory;
use Nette;
use Nette\Application\UI\Form;

final class AjaxPresenter extends Nette\Application\UI\Presenter
{

    private $number = 0;


    /** @var AjaxComponentFactory @inject @internal */
    public $ajaxComponentFactory;

    public $messageList = [];

    protected function startup()
    {
        parent::startup(); // TODO: Change the autogenerated stub
    }

    protected function beforeRender()
    {
        $this->template->absoluteUrl = "C:\WWW\NETTE-Anything\nette-blog-ajax\nette-blog\www\bundle";
    }

    public function renderDefault()
    {
        $this->template->number = $this->number;
        $this->template->messageList = $this->messageList;
    }

    public function handleIncrement(int $number)
    {
        $this->number = $number + 1;
        $this->redrawControl("mySnippet");
    }

    public function handleClick()
    {
        $this->template->messageText = "Ahoj";
        $this->template->messageList = [];
        $this->redrawControl("message");
        $this->redrawControl("list");
    }

    public function handleEdit(int $id)
    {
        $values = $this->messageList;
        $this['form']->setDefaults($values);
        $this->redrawControl("form");
    }

//    public function handleDelete(array $messageList)
//    {
//        unset($messageList[$])
//    }

    public function createComponentForm(): Form
    {
        $form = new Form();
        $form->getElementPrototype()->class("ajax");
        $form->addHidden("list");
        $form->addText("name", "JmÃ©no");
        $form->addSubmit("send", "Save");
        $form->onSuccess[] = function (Form $form, $values) {
            $list = explode(",", $values['list']);
            $list[] = $values['name'];
            $this->messageList = $list;
            $rawList = implode(",", $list);

            $form->setValues(["list" => $rawList, "name" => ""], true);

            $this->redrawControl("list");
            $this->redrawControl("form");
        };
        return $form;
    }

    public function createComponentAjaxComponent(): AjaxComponent
    {
        $c = $this->ajaxComponentFactory->create();
        return $c;
    }

}

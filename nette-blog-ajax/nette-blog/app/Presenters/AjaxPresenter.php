<?php

declare(strict_types=1);

namespace App\Presenters;

use App\Components\FileSystem\AjaxComponent;
use App\Components\FileSystem\AjaxComponentFactory;
use Nette;
use Nette\Application\UI\Form;

final class AjaxPresenter extends Nette\Application\UI\Presenter {

	private $number = 0;

	/** @var AjaxComponentFactory @inject @internal */
	public $ajaxComponentFactory;

	protected function startup() {
		parent::startup(); // TODO: Change the autogenerated stub
	}

	protected function beforeRender() {
		$this->template->absoluteUrl = "http://localhost/NETTE-Anything/nette-blog/www";
	}

	public function renderDefault() {
		$this->template->number = $this->number;
	}

	public function handleIncrement(int $number) {
		$this->number = $number + 1;
		$this->redrawControl("mySnippet");
	}

	public function handleClick() {
		$this->template->messageText = "Ahoj";
		$this->redrawControl("message");
	}

	public function createComponentForm(): Form {
		$form = new Form();
		$form->getElementPrototype()->class("ajax");
		$form->addText("name", "JmÃ©no");
		$form->addSubmit("send", "Save");
		$form->onSuccess[] = function (Form $form, $values) {
			$this->template->messageText = $values['name'];
			$this->redrawControl("message");
			$this["ajaxComponent"]->redrawControl();

			$form->setValues([], true);
			$this->redrawControl("form");
		};
		return $form;
	}

	public function createComponentAjaxComponent(): AjaxComponent {
		$c = $this->ajaxComponentFactory->create();
		return $c;
	}

}
